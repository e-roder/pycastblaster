TODO:
-purge lingering temp files on startup (record names explicitly in delete_me.txt to mitigate risk of deleting files accidentally?)
-curate images
-Support for multiple chromecasts?
--Is this always-on or does it rely on Home Assistant to call it?
-make usable on other machines
--move config constants to a separate file?
---user config for portrait and landscape processing modes?
--figure out how to make image processing callable from command line
--generate python requirements
--disclaimer about Linux only due to pychromecast networking using poll()
-refresh image list in background thread, swap between iterations?
-UI/UX: via webserver?
--graceful exit
--reload settings (e.g. slideshow length) on the fly
-More robust error handling
--reconnect to chromecast
-image processing
--black dividing line between spliced images?
-improve lazy evaluation of is_portait to better handle worst-case scenarios
--treat unknown-layout images like landscape
--don't do lazy evaluation when looking for next portrait image to splice with, just treat like landscape
--pre-evaluate the first 10(?) images so that
--evaluate while waiting for next image instead of sleeping?
-Move to home assistant server
-try queueing to avoid black screen between images
--maybe just queuing one image and advancing is sufficient? rely on chromecast device to purge queue?
--pychromecast API doesn't support queue management. This would require extending it to do so